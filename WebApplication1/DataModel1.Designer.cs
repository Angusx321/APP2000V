//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 25.05.2019 17:41:56
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Fc9zhtjfn1Model", "customerorders_ibfk_1", "Fooditem", RelationshipMultiplicity.One, typeof(Fc9zhtjfn1Model.Fooditem), "Customerorders", RelationshipMultiplicity.Many, typeof(Fc9zhtjfn1Model.Customerorder), true)]
[assembly: EdmRelationshipAttribute("Fc9zhtjfn1Model", "customerorders_ibfk_2", "User", RelationshipMultiplicity.One, typeof(Fc9zhtjfn1Model.User), "Customerorders", RelationshipMultiplicity.Many, typeof(Fc9zhtjfn1Model.Customerorder), true)]
[assembly: EdmRelationshipAttribute("Fc9zhtjfn1Model", "state", "Orderstate1", RelationshipMultiplicity.One, typeof(Fc9zhtjfn1Model.Orderstate), "Customerorders", RelationshipMultiplicity.Many, typeof(Fc9zhtjfn1Model.Customerorder), true)]

#endregion

namespace Fc9zhtjfn1Model
{

    #region Fc9zhtjfn1Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Fc9zhtjfn1Entities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new Fc9zhtjfn1Entities object.
        /// </summary>
        public Fc9zhtjfn1Entities() : 
                base(@"name=Fc9zhtjfn1EntitiesConnectionString", "Fc9zhtjfn1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new Fc9zhtjfn1Entities object using the connection string found in the 'Fc9zhtjfn1Entities' section of the application configuration file.
        /// </summary>
        public Fc9zhtjfn1Entities(string connectionString) : 
                base(connectionString, "Fc9zhtjfn1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new Fc9zhtjfn1Entities object.
        /// </summary>
        public Fc9zhtjfn1Entities(EntityConnection connection) : base(connection, "Fc9zhtjfn1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customerorder> Customerorders
        {
            get
            {
                if ((_Customerorders == null))
                {
                    _Customerorders = base.CreateObjectSet<Customerorder>("Customerorders");
                }
                return _Customerorders;
            }
        }
        private ObjectSet<Customerorder> _Customerorders;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Foodallergy> Foodallergies
        {
            get
            {
                if ((_Foodallergies == null))
                {
                    _Foodallergies = base.CreateObjectSet<Foodallergy>("Foodallergies");
                }
                return _Foodallergies;
            }
        }
        private ObjectSet<Foodallergy> _Foodallergies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Foodallergylist> Foodallergylists
        {
            get
            {
                if ((_Foodallergylists == null))
                {
                    _Foodallergylists = base.CreateObjectSet<Foodallergylist>("Foodallergylists");
                }
                return _Foodallergylists;
            }
        }
        private ObjectSet<Foodallergylist> _Foodallergylists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Foodcategory> Foodcategories
        {
            get
            {
                if ((_Foodcategories == null))
                {
                    _Foodcategories = base.CreateObjectSet<Foodcategory>("Foodcategories");
                }
                return _Foodcategories;
            }
        }
        private ObjectSet<Foodcategory> _Foodcategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fooddiet> Fooddiets
        {
            get
            {
                if ((_Fooddiets == null))
                {
                    _Fooddiets = base.CreateObjectSet<Fooddiet>("Fooddiets");
                }
                return _Fooddiets;
            }
        }
        private ObjectSet<Fooddiet> _Fooddiets;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fooditem> Fooditems
        {
            get
            {
                if ((_Fooditems == null))
                {
                    _Fooditems = base.CreateObjectSet<Fooditem>("Fooditems");
                }
                return _Fooditems;
            }
        }
        private ObjectSet<Fooditem> _Fooditems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Foodorderstate> Foodorderstates
        {
            get
            {
                if ((_Foodorderstates == null))
                {
                    _Foodorderstates = base.CreateObjectSet<Foodorderstate>("Foodorderstates");
                }
                return _Foodorderstates;
            }
        }
        private ObjectSet<Foodorderstate> _Foodorderstates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Orderstate> Orderstates
        {
            get
            {
                if ((_Orderstates == null))
                {
                    _Orderstates = base.CreateObjectSet<Orderstate>("Orderstates");
                }
                return _Orderstates;
            }
        }
        private ObjectSet<Orderstate> _Orderstates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Customerorders EntitySet.
        /// </summary>
        public void AddToCustomerorders(Customerorder customerorder)
        {
            base.AddObject("Customerorders", customerorder);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Foodallergies EntitySet.
        /// </summary>
        public void AddToFoodallergies(Foodallergy foodallergy)
        {
            base.AddObject("Foodallergies", foodallergy);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Foodallergylists EntitySet.
        /// </summary>
        public void AddToFoodallergylists(Foodallergylist foodallergylist)
        {
            base.AddObject("Foodallergylists", foodallergylist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Foodcategories EntitySet.
        /// </summary>
        public void AddToFoodcategories(Foodcategory foodcategory)
        {
            base.AddObject("Foodcategories", foodcategory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Fooddiets EntitySet.
        /// </summary>
        public void AddToFooddiets(Fooddiet fooddiet)
        {
            base.AddObject("Fooddiets", fooddiet);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Fooditems EntitySet.
        /// </summary>
        public void AddToFooditems(Fooditem fooditem)
        {
            base.AddObject("Fooditems", fooditem);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Foodorderstates EntitySet.
        /// </summary>
        public void AddToFoodorderstates(Foodorderstate foodorderstate)
        {
            base.AddObject("Foodorderstates", foodorderstate);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Orderstates EntitySet.
        /// </summary>
        public void AddToOrderstates(Orderstate orderstate)
        {
            base.AddObject("Orderstates", orderstate);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }

    #endregion
}

namespace Fc9zhtjfn1Model
{

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.Customerorder in the schema.
    /// </summary>
    /// <KeyProperties>
    /// OrderID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="Customerorder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customerorder : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Customerorder object.
        /// </summary>
        /// <param name="orderID">Initial value of OrderID.</param>
        /// <param name="foodID">Initial value of FoodID.</param>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="datetime">Initial value of Datetime.</param>
        /// <param name="orderstate">Initial value of Orderstate.</param>
        public static Customerorder CreateCustomerorder(int orderID, int foodID, int userId, global::System.DateTime datetime, string orderstate)
        {
            Customerorder customerorder = new Customerorder();
            customerorder.OrderID = orderID;
            customerorder.FoodID = foodID;
            customerorder.UserId = userId;
            customerorder.Datetime = datetime;
            customerorder.Orderstate = orderstate;
            return customerorder;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for OrderID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OrderID
        {
            get
            {
                int value = _OrderID;
                OnGetOrderID(ref value);
                return value;
            }
            set
            {
                if (_OrderID != value)
                {
                  OnOrderIDChanging(ref value);
                  ReportPropertyChanging("OrderID");
                  _OrderID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderID");
                  OnOrderIDChanged();
              }
            }
        }
        private int _OrderID;
        partial void OnGetOrderID(ref int value);
        partial void OnOrderIDChanging(ref int value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// There are no comments for FoodID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FoodID
        {
            get
            {
                int value = _FoodID;
                OnGetFoodID(ref value);
                return value;
            }
            set
            {
                if (_FoodID != value)
                {
                  OnFoodIDChanging(ref value);
                  ReportPropertyChanging("FoodID");
                  _FoodID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FoodID");
                  OnFoodIDChanged();
              }
            }
        }
        private int _FoodID;
        partial void OnGetFoodID(ref int value);
        partial void OnFoodIDChanging(ref int value);
        partial void OnFoodIDChanged();
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UserId
        {
            get
            {
                int value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private int _UserId;
        partial void OnGetUserId(ref int value);
        partial void OnUserIdChanging(ref int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for Datetime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime Datetime
        {
            get
            {
                global::System.DateTime value = _Datetime;
                OnGetDatetime(ref value);
                return value;
            }
            set
            {
                if (_Datetime != value)
                {
                  OnDatetimeChanging(ref value);
                  ReportPropertyChanging("Datetime");
                  _Datetime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Datetime");
                  OnDatetimeChanged();
              }
            }
        }
        private global::System.DateTime _Datetime = DateTime.Now;
        partial void OnGetDatetime(ref global::System.DateTime value);
        partial void OnDatetimeChanging(ref global::System.DateTime value);
        partial void OnDatetimeChanged();
    
        /// <summary>
        /// There are no comments for Orderstate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Orderstate
        {
            get
            {
                string value = _Orderstate;
                OnGetOrderstate(ref value);
                return value;
            }
            set
            {
                if (_Orderstate != value)
                {
                  OnOrderstateChanging(ref value);
                  ReportPropertyChanging("Orderstate");
                  _Orderstate = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Orderstate");
                  OnOrderstateChanged();
              }
            }
        }
        private string _Orderstate;
        partial void OnGetOrderstate(ref string value);
        partial void OnOrderstateChanging(ref string value);
        partial void OnOrderstateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Fooditem in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fc9zhtjfn1Model", "customerorders_ibfk_1", "Fooditem")]
        public virtual Fooditem Fooditem
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Fooditem>("Fc9zhtjfn1Model.customerorders_ibfk_1", "Fooditem").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Fooditem>("Fc9zhtjfn1Model.customerorders_ibfk_1", "Fooditem").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Fooditem in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fooditem> FooditemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Fooditem>("Fc9zhtjfn1Model.customerorders_ibfk_1", "Fooditem");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Fooditem>("Fc9zhtjfn1Model.customerorders_ibfk_1", "Fooditem", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Fooditem>("Fc9zhtjfn1Model.customerorders_ibfk_1", "Fooditem").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fc9zhtjfn1Model", "customerorders_ibfk_2", "User")]
        public virtual User User
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Fc9zhtjfn1Model.customerorders_ibfk_2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Fc9zhtjfn1Model.customerorders_ibfk_2", "User").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for User in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Fc9zhtjfn1Model.customerorders_ibfk_2", "User");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<User>("Fc9zhtjfn1Model.customerorders_ibfk_2", "User", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<User>("Fc9zhtjfn1Model.customerorders_ibfk_2", "User").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Orderstate1 in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fc9zhtjfn1Model", "state", "Orderstate1")]
        public virtual Orderstate Orderstate1
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Orderstate>("Fc9zhtjfn1Model.state", "Orderstate1").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Orderstate>("Fc9zhtjfn1Model.state", "Orderstate1").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Orderstate1 in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Orderstate> Orderstate1Reference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Orderstate>("Fc9zhtjfn1Model.state", "Orderstate1");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Orderstate>("Fc9zhtjfn1Model.state", "Orderstate1", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Orderstate>("Fc9zhtjfn1Model.state", "Orderstate1").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.Foodallergy in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Allergy
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="Foodallergy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Foodallergy : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Foodallergy object.
        /// </summary>
        /// <param name="allergy">Initial value of Allergy.</param>
        public static Foodallergy CreateFoodallergy(string allergy)
        {
            Foodallergy foodallergy = new Foodallergy();
            foodallergy.Allergy = allergy;
            return foodallergy;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Allergy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Allergy
        {
            get
            {
                string value = _Allergy;
                OnGetAllergy(ref value);
                return value;
            }
            set
            {
                if (_Allergy != value)
                {
                  OnAllergyChanging(ref value);
                  ReportPropertyChanging("Allergy");
                  _Allergy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Allergy");
                  OnAllergyChanged();
              }
            }
        }
        private string _Allergy;
        partial void OnGetAllergy(ref string value);
        partial void OnAllergyChanging(ref string value);
        partial void OnAllergyChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.Foodallergylist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FoodID
    /// Allergy
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="Foodallergylist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Foodallergylist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Foodallergylist object.
        /// </summary>
        /// <param name="foodID">Initial value of FoodID.</param>
        /// <param name="allergy">Initial value of Allergy.</param>
        public static Foodallergylist CreateFoodallergylist(int foodID, string allergy)
        {
            Foodallergylist foodallergylist = new Foodallergylist();
            foodallergylist.FoodID = foodID;
            foodallergylist.Allergy = allergy;
            return foodallergylist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FoodID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FoodID
        {
            get
            {
                int value = _FoodID;
                OnGetFoodID(ref value);
                return value;
            }
            set
            {
                if (_FoodID != value)
                {
                  OnFoodIDChanging(ref value);
                  ReportPropertyChanging("FoodID");
                  _FoodID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FoodID");
                  OnFoodIDChanged();
              }
            }
        }
        private int _FoodID;
        partial void OnGetFoodID(ref int value);
        partial void OnFoodIDChanging(ref int value);
        partial void OnFoodIDChanged();
    
        /// <summary>
        /// There are no comments for Allergy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Allergy
        {
            get
            {
                string value = _Allergy;
                OnGetAllergy(ref value);
                return value;
            }
            set
            {
                if (_Allergy != value)
                {
                  OnAllergyChanging(ref value);
                  ReportPropertyChanging("Allergy");
                  _Allergy = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Allergy");
                  OnAllergyChanged();
              }
            }
        }
        private string _Allergy;
        partial void OnGetAllergy(ref string value);
        partial void OnAllergyChanging(ref string value);
        partial void OnAllergyChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.Foodcategory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Category
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="Foodcategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Foodcategory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Foodcategory object.
        /// </summary>
        /// <param name="category">Initial value of Category.</param>
        public static Foodcategory CreateFoodcategory(string category)
        {
            Foodcategory foodcategory = new Foodcategory();
            foodcategory.Category = category;
            return foodcategory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Category in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Category
        {
            get
            {
                string value = _Category;
                OnGetCategory(ref value);
                return value;
            }
            set
            {
                if (_Category != value)
                {
                  OnCategoryChanging(ref value);
                  ReportPropertyChanging("Category");
                  _Category = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Category");
                  OnCategoryChanged();
              }
            }
        }
        private string _Category;
        partial void OnGetCategory(ref string value);
        partial void OnCategoryChanging(ref string value);
        partial void OnCategoryChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.Fooddiet in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Diet
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="Fooddiet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fooddiet : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Fooddiet object.
        /// </summary>
        /// <param name="diet">Initial value of Diet.</param>
        public static Fooddiet CreateFooddiet(string diet)
        {
            Fooddiet fooddiet = new Fooddiet();
            fooddiet.Diet = diet;
            return fooddiet;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Diet in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Diet
        {
            get
            {
                string value = _Diet;
                OnGetDiet(ref value);
                return value;
            }
            set
            {
                if (_Diet != value)
                {
                  OnDietChanging(ref value);
                  ReportPropertyChanging("Diet");
                  _Diet = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Diet");
                  OnDietChanged();
              }
            }
        }
        private string _Diet;
        partial void OnGetDiet(ref string value);
        partial void OnDietChanging(ref string value);
        partial void OnDietChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.Fooditem in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FoodID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="Fooditem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fooditem : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Fooditem object.
        /// </summary>
        /// <param name="foodID">Initial value of FoodID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="price">Initial value of Price.</param>
        /// <param name="image">Initial value of Image.</param>
        public static Fooditem CreateFooditem(int foodID, string name, int price, string image)
        {
            Fooditem fooditem = new Fooditem();
            fooditem.FoodID = foodID;
            fooditem.Name = name;
            fooditem.Price = price;
            fooditem.Image = image;
            return fooditem;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FoodID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FoodID
        {
            get
            {
                int value = _FoodID;
                OnGetFoodID(ref value);
                return value;
            }
            set
            {
                if (_FoodID != value)
                {
                  OnFoodIDChanging(ref value);
                  ReportPropertyChanging("FoodID");
                  _FoodID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FoodID");
                  OnFoodIDChanged();
              }
            }
        }
        private int _FoodID;
        partial void OnGetFoodID(ref int value);
        partial void OnFoodIDChanging(ref int value);
        partial void OnFoodIDChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Price
        {
            get
            {
                int value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private int _Price;
        partial void OnGetPrice(ref int value);
        partial void OnPriceChanging(ref int value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Image in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Image
        {
            get
            {
                string value = _Image;
                OnGetImage(ref value);
                return value;
            }
            set
            {
                if (_Image != value)
                {
                  OnImageChanging(ref value);
                  ReportPropertyChanging("Image");
                  _Image = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Image");
                  OnImageChanged();
              }
            }
        }
        private string _Image;
        partial void OnGetImage(ref string value);
        partial void OnImageChanging(ref string value);
        partial void OnImageChanged();
    
        /// <summary>
        /// There are no comments for Diet in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Diet
        {
            get
            {
                string value = _Diet;
                OnGetDiet(ref value);
                return value;
            }
            set
            {
                if (_Diet != value)
                {
                  OnDietChanging(ref value);
                  ReportPropertyChanging("Diet");
                  _Diet = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Diet");
                  OnDietChanged();
              }
            }
        }
        private string _Diet;
        partial void OnGetDiet(ref string value);
        partial void OnDietChanging(ref string value);
        partial void OnDietChanged();
    
        /// <summary>
        /// There are no comments for Category in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Category
        {
            get
            {
                string value = _Category;
                OnGetCategory(ref value);
                return value;
            }
            set
            {
                if (_Category != value)
                {
                  OnCategoryChanging(ref value);
                  ReportPropertyChanging("Category");
                  _Category = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Category");
                  OnCategoryChanged();
              }
            }
        }
        private string _Category;
        partial void OnGetCategory(ref string value);
        partial void OnCategoryChanging(ref string value);
        partial void OnCategoryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customerorders in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fc9zhtjfn1Model", "customerorders_ibfk_1", "Customerorders")]
        public virtual EntityCollection<Customerorder> Customerorders
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Customerorder>("Fc9zhtjfn1Model.customerorders_ibfk_1", "Customerorders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Customerorder>("Fc9zhtjfn1Model.customerorders_ibfk_1", "Customerorders", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.Foodorderstate in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FoodID
    /// State
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="Foodorderstate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Foodorderstate : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Foodorderstate object.
        /// </summary>
        /// <param name="foodID">Initial value of FoodID.</param>
        /// <param name="state">Initial value of State.</param>
        public static Foodorderstate CreateFoodorderstate(int foodID, string state)
        {
            Foodorderstate foodorderstate = new Foodorderstate();
            foodorderstate.FoodID = foodID;
            foodorderstate.State = state;
            return foodorderstate;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FoodID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FoodID
        {
            get
            {
                int value = _FoodID;
                OnGetFoodID(ref value);
                return value;
            }
            set
            {
                if (_FoodID != value)
                {
                  OnFoodIDChanging(ref value);
                  ReportPropertyChanging("FoodID");
                  _FoodID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FoodID");
                  OnFoodIDChanged();
              }
            }
        }
        private int _FoodID;
        partial void OnGetFoodID(ref int value);
        partial void OnFoodIDChanging(ref int value);
        partial void OnFoodIDChanged();
    
        /// <summary>
        /// There are no comments for State in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string State
        {
            get
            {
                string value = _State;
                OnGetState(ref value);
                return value;
            }
            set
            {
                if (_State != value)
                {
                  OnStateChanging(ref value);
                  ReportPropertyChanging("State");
                  _State = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("State");
                  OnStateChanged();
              }
            }
        }
        private string _State;
        partial void OnGetState(ref string value);
        partial void OnStateChanging(ref string value);
        partial void OnStateChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.Orderstate in the schema.
    /// </summary>
    /// <KeyProperties>
    /// State
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="Orderstate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Orderstate : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Orderstate object.
        /// </summary>
        /// <param name="state">Initial value of State.</param>
        public static Orderstate CreateOrderstate(string state)
        {
            Orderstate orderstate = new Orderstate();
            orderstate.State = state;
            return orderstate;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for State in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string State
        {
            get
            {
                string value = _State;
                OnGetState(ref value);
                return value;
            }
            set
            {
                if (_State != value)
                {
                  OnStateChanging(ref value);
                  ReportPropertyChanging("State");
                  _State = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("State");
                  OnStateChanged();
              }
            }
        }
        private string _State;
        partial void OnGetState(ref string value);
        partial void OnStateChanging(ref string value);
        partial void OnStateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customerorders in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fc9zhtjfn1Model", "state", "Customerorders")]
        public virtual EntityCollection<Customerorder> Customerorders
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Customerorder>("Fc9zhtjfn1Model.state", "Customerorders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Customerorder>("Fc9zhtjfn1Model.state", "Customerorders", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Fc9zhtjfn1Model.User in the schema.
    /// </summary>
    /// <KeyProperties>
    /// UserId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Fc9zhtjfn1Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of UserId.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="password">Initial value of Password.</param>
        public static User CreateUser(int userId, string email, string firstName, string lastName, string password)
        {
            User user = new User();
            user.UserId = userId;
            user.Email = email;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.Password = password;
            return user;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UserId
        {
            get
            {
                int value = _UserId;
                OnGetUserId(ref value);
                return value;
            }
            set
            {
                if (_UserId != value)
                {
                  OnUserIdChanging(ref value);
                  ReportPropertyChanging("UserId");
                  _UserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserId");
                  OnUserIdChanged();
              }
            }
        }
        private int _UserId;
        partial void OnGetUserId(ref int value);
        partial void OnUserIdChanging(ref int value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// There are no comments for LastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LastName
        {
            get
            {
                string value = _LastName;
                OnGetLastName(ref value);
                return value;
            }
            set
            {
                if (_LastName != value)
                {
                  OnLastNameChanging(ref value);
                  ReportPropertyChanging("LastName");
                  _LastName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LastName");
                  OnLastNameChanged();
              }
            }
        }
        private string _LastName;
        partial void OnGetLastName(ref string value);
        partial void OnLastNameChanging(ref string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// There are no comments for Password in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Password
        {
            get
            {
                string value = _Password;
                OnGetPassword(ref value);
                return value;
            }
            set
            {
                if (_Password != value)
                {
                  OnPasswordChanging(ref value);
                  ReportPropertyChanging("Password");
                  _Password = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Password");
                  OnPasswordChanged();
              }
            }
        }
        private string _Password;
        partial void OnGetPassword(ref string value);
        partial void OnPasswordChanging(ref string value);
        partial void OnPasswordChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customerorders in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Fc9zhtjfn1Model", "customerorders_ibfk_2", "Customerorders")]
        public virtual EntityCollection<Customerorder> Customerorders
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Customerorder>("Fc9zhtjfn1Model.customerorders_ibfk_2", "Customerorders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Customerorder>("Fc9zhtjfn1Model.customerorders_ibfk_2", "Customerorders", value);
                }
            }
        }

        #endregion
    }

}
